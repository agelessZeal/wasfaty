<style>
    .user-upload-avatar {
        width: 100%;
    }
    .avatar-progress {
        display: none;
        margin-bottom: 1rem;
    }
    .img-container img {
        max-width: 100%;
    }
    .img-container {
        margin-bottom: 0 !important;
    }
    #modalLabel
    {
        display: inline-block;
        font-size: 15px;
    }
    #cropjs-modal button
    {
        font-size: 0.7rem;
    }
    #cropjs-modal .modal-header {
        background-color: #c5c5c54f;
        padding-top: 10px;
        padding-bottom: 10px;
    }
    #cropjs-modal .modal-header .close {
        font-size: 30px;
        top: 13px;
    }
    @media (min-width: 576px) {
        #cropjs-modal .modal-dialog {
            max-width: 570px;
            margin: 1.75rem auto;
        }
    }
</style>

<div class="modal fade" id="cropjs-modal" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalLabel"><%= i18n.__("Crop the image") %></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="img-container">
                    <img id="image" src="https://avatars0.githubusercontent.com/u/3456749">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal"><%= i18n.__("Cancel") %></button>
                <button type="button" class="btn btn-primary" id="crop"><%= i18n.__("Crop") %></button>
            </div>
        </div>
    </div>
</div>
<script>
    var pgTitle = '<%= title %>';
    var avatar = document.getElementById('avatar-image');
    var input = document.getElementById('avatar-input');
    var $progress = $('.avatar-progress');
    var $progressBar = $('.progress-bar');
    var $modal = $('#cropjs-modal');

    if (!HTMLCanvasElement.prototype.toBlob) {
        Object.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {
            value: function (callback, type, quality) {
                var canvas = this;
                setTimeout(function() {
                    var binStr = atob( canvas.toDataURL(type, quality).split(',')[1] ),
                        len = binStr.length,
                        arr = new Uint8Array(len);
                    for (var i = 0; i < len; i++ ) {
                        arr[i] = binStr.charCodeAt(i);
                    }
                    callback( new Blob( [arr], {type: type || 'image/png'} ) );
                });
            }
        });
    }

    if (input) {
        input.addEventListener('change', function (e) {
            var files = e.target.files;
            var done = function (url) {
                input.value = '';
                image.src = url;
                $modal.modal('show');
            };
            var reader;
            var file;
            var url;

            if (files && files.length > 0) {
                file = files[0];

                if (URL) {
                    done(URL.createObjectURL(file));
                } else if (FileReader) {
                    reader = new FileReader();
                    reader.onload = function (e) {
                        done(reader.result);
                    };
                    reader.readAsDataURL(file);
                }
            }
        });
    }


    $modal.on('shown.bs.modal', function () {
        cropper = new Cropper(image, {
            aspectRatio: 1,
            viewMode: 1,
        });
    }).on('hidden.bs.modal', function () {
        cropper.destroy();
        cropper = null;
    });
    document.getElementById('crop').addEventListener('click', function () {
        var initialAvatarURL;
        var canvas;

        $modal.modal('hide');

        if (cropper) {
            canvas = cropper.getCroppedCanvas({
                width: 160,
                height: 160,
            });

            initialAvatarURL = avatar.src;
            avatar.src = canvas.toDataURL();
            $progress.show();
            canvas.toBlob(function (blob) {
                var formData = new FormData();
                formData.append('file', blob);

                var ajaxURL = (pgTitle == 'Item List')?'/item/upload_picture':'/users/upload_avatar';

                $.ajax(ajaxURL, {
                    method: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    xhr: function () {
                        var xhr = new XMLHttpRequest();

                        xhr.upload.onprogress = function (e) {
                            var percent = '0';
                            var percentage = '0%';

                            if (e.lengthComputable) {
                                percent = Math.round((e.loaded / e.total) * 100);
                                percentage = percent + '%';
                                $progressBar.width(percentage).attr('aria-valuenow', percent).text(percentage);
                            }
                        };
                        return xhr;
                    },
                    success: function (res) {
                        if(res.status=='success'){
                            avatar.src = res.data;
                            $('input[name="pic"]').val(res.data);
                            console.log('Avatar Image uploading Success!');
                        }else{
                            alert(res.data);
                        }
                    },
                    error: function () {
                        avatar.src = initialAvatarURL;
                        alert('Avatar Image uploading failed!');
                    },
                    complete: function () {
                        $progress.hide();
                    },
                });
            });
        }
    });
</script>
